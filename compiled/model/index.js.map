{"version":3,"sources":["../../src/model/index.js"],"names":["basename","path","module","filename","db","sequelize","Sequelize","config","database","username","password","authenticate","then","console","log","catch","err","error","fs","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","import","join","name","Object","keys","modelName","associate","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AADA,IAAIA,WAAWC,eAAKD,QAAL,CAAcE,OAAOC,QAArB,CAAf;;AAEA,IAAIC,KAAK,EAAT;;AAEA,IAAIC,YAAY,IAAIC,mBAAJ,CAAcC,iBAAOC,QAArB,EAA+BD,iBAAOE,QAAtC,EAAgDF,iBAAOG,QAAvD,EACZH,gBADY,CAAhB;;AAGAF,UACGM,YADH,GAEGC,IAFH,CAEQ,MAAM;AACVC,UAAQC,GAAR,CAAY,+CAAZ;AACD,CAJH,EAKGC,KALH,CAKSC,OAAO;AACZH,UAAQI,KAAR,CAAc,oCAAd,EAAoDD,GAApD;AACD,CAPH;;AAUAE,aACGC,WADH,CACeC,SADf,EAEGC,MAFH,CAEU,UAASC,IAAT,EAAe;AACrB,SAAQA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAAStB,QAAvC,IACFsB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KADxB;AAED,CALH,EAMGC,OANH,CAMW,UAASH,IAAT,EAAe;AACtB,MAAII,QAAQrB,UAAUsB,MAAV,CAAiB1B,eAAK2B,IAAL,CAAUR,SAAV,EAAqBE,IAArB,CAAjB,CAAZ;AACAlB,KAAGsB,MAAMG,IAAT,IAAiBH,KAAjB;AACD,CATH;;AAWAI,OAAOC,IAAP,CAAY3B,EAAZ,EAAgBqB,OAAhB,CAAwB,UAASO,SAAT,EAAoB;AAC1C,MAAI5B,GAAG4B,SAAH,EAAcC,SAAlB,EAA6B;AAC3B7B,OAAG4B,SAAH,EAAcC,SAAd,CAAwB7B,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;;AAEAH,OAAOgC,OAAP,GAAiB9B,EAAjB","file":"index.js","sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport Sequelize from 'sequelize';\r\nvar basename = path.basename(module.filename);\r\nimport {database as config} from '../../config.json';\r\nvar db = {};\r\n\r\nvar sequelize = new Sequelize(config.database, config.username, config.password,\r\n    config);\r\n\r\nsequelize\r\n  .authenticate()\r\n  .then(() => {\r\n    console.log('Connection has been established successfully.');\r\n  })\r\n  .catch(err => {\r\n    console.error('Unable to connect to the database:', err);\r\n  });\r\n\r\n\r\nfs\r\n  .readdirSync(__dirname)\r\n  .filter(function(file) {\r\n    return (file.indexOf('.') !== 0) && (file !== basename) &&\r\n        (file.slice(-3) === '.js');\r\n  })\r\n  .forEach(function(file) {\r\n    var model = sequelize.import(path.join(__dirname, file));\r\n    db[model.name] = model;\r\n  });\r\n\r\nObject.keys(db).forEach(function(modelName) {\r\n  if (db[modelName].associate) {\r\n    db[modelName].associate(db);\r\n  }\r\n});\r\n\r\ndb.sequelize = sequelize;\r\n\r\nmodule.exports = db;"]}