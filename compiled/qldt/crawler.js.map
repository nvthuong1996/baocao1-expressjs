{"version":3,"sources":["../../src/qldt/crawler.js"],"names":["crawlerBasicInfo","cookie","Promise","resolve","reject","header","JSON","parse","stringify","HEADER","method","uri","headers","err","res","body","statusCode","regex","RegExp","match","exec","mssv","matchIDtagSpan","ten_sv","gioi_tinh","ngay_sinh","noi_sinh","lop","nganh","khoa","he_dao_tao","khoa_hoc","id"],"mappings":";;;;;;;AAKA;;;;AACA;;;;;;AANA;;;;;QAUCA,gB,GAAAA,gB;;;AAID,SAASA,gBAAT,CAA0BC,MAA1B,EAAiC;AAChC,QAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAkB;AACpC,MAAIC,SAASC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeC,gBAAf,CAAX,CAAb;AACAJ,SAAO,QAAP,IAAmBJ,MAAnB;AACA,yBAAQ;AACPS,WAAO,KADA;AAEPC,QAAI,sDAFG;AAGPC,YAAQP;AAHD,GAAR,EAIE,CAACQ,GAAD,EAAKC,GAAL,EAASC,IAAT,KAAgB;AACjB,OAAGF,OAAKC,IAAIE,UAAJ,IAAgB,GAAxB,EAA4B;AAC3B,WAAOZ,OAAO,qCAAP,CAAP;AACA;AACD,OAAIa,QAAQ,IAAIC,MAAJ,CAAY,cAAZ,EAA0B,GAA1B,CAAZ;AACA,OAAIC,QAAMF,MAAMG,IAAN,CAAWL,IAAX,CAAV;AACA,OAAG,CAACI,KAAJ,EAAU;AACT,WAAOf,OAAO,6CAAP,CAAP;AACA;;AAED,OAAIiB,OAAOC,eAAe,4DAAf,EAA4EP,IAA5E,CAAX;AACG,OAAIQ,SAASD,eAAe,6DAAf,EAA6EP,IAA7E,CAAb;AACA,OAAIS,YAAYF,eAAe,sDAAf,EAAsEP,IAAtE,CAAhB;AACA,OAAIU,YAAYH,eAAe,0DAAf,EAA0EP,IAA1E,CAAhB;AACA,OAAIW,WAAWJ,eAAe,yDAAf,EAAyEP,IAAzE,CAAf;AACA,OAAIY,MAAML,eAAe,qDAAf,EAAqEP,IAArE,CAAV;AACA,OAAIa,QAAQN,eAAe,sDAAf,EAAsEP,IAAtE,CAAZ;AACA,OAAIc,OAAOP,eAAe,sDAAf,EAAsEP,IAAtE,CAAX;AACA,OAAIe,aAAaR,eAAe,0DAAf,EAA0EP,IAA1E,CAAjB;AACA,OAAIgB,WAAWT,eAAe,yDAAf,EAAyEP,IAAzE,CAAf;;AAEA,UAAOZ,QAAQ;AACd6B,QAAGX,IADW;AAEdE,YAAOA,MAFO;AAGdC,eAAUA,SAHI;AAIdC,eAAUA,SAJI;AAKdC,cAASA,QALK;AAMdC,SAAIA,GANU;AAOdC,WAAMA,KAPQ;AAQdE,gBAAWA,UARG;AASdC,cAASA,QATK;AAUdF,UAAKA;AAVS,IAAR,CAAP;AAYH,GArCD;AAsCA,EAzCM,CAAP;AA0CA;;AAED,SAASP,cAAT,CAAwBU,EAAxB,EAA2BjB,IAA3B,EAAgC;AAC/B,KAAIE,QAAQ,IAAIC,MAAJ,CAAY,oBAAmBc,EAAG,mBAAlC,CAAZ;AACA,KAAIb,QAAMF,MAAMG,IAAN,CAAWL,IAAX,CAAV;AACA,KAAGI,KAAH,EAAS;AACR,SAAOA,MAAM,CAAN,CAAP;AACA,EAFD,MAEK;AACJ,SAAO,IAAP;AACA;AACD","file":"crawler.js","sourcesContent":["/*\r\n*\tBao gồm crawler thông tin cơ bản và crawler điểm thi\r\n*\r\n*/\r\n\r\nimport request from \"request\";\r\nimport HEADER from \"../../header.json\";\r\n\r\n\r\nexport {\r\n\tcrawlerBasicInfo\r\n};\r\n\r\n\r\nfunction crawlerBasicInfo(cookie){\r\n\treturn new Promise((resolve,reject)=>{\r\n\t\tvar header = JSON.parse(JSON.stringify(HEADER));\r\n\t\theader[\"Cookie\"] = cookie;\r\n\t\trequest({\r\n\t\t\tmethod:\"GET\",\r\n\t\t\turi:\"http://qldt.ptit.edu.vn/Default.aspx?page=xemdiemthi\",\r\n\t\t\theaders:header\r\n\t\t},(err,res,body)=>{\r\n\t\t\tif(err||res.statusCode!=200){\r\n\t\t\t\treturn reject(\"Có lỗi khi crawler thông tin cơ bản\");\r\n\t\t\t}\r\n\t\t\tvar regex = new RegExp(`Chào(.*?)\\\\)`,'g');\r\n\t\t\tvar match=regex.exec(body);\r\n\t\t\tif(!match){\r\n\t\t\t\treturn reject(\"Lỗi chưa login khi crawler thông tin cơ bản\");\r\n\t\t\t}\r\n\r\n\t\t\tvar mssv = matchIDtagSpan(\"ctl00_ContentPlaceHolder1_ctl00_ucThongTinSV_lblMaSinhVien\",body);\r\n\t\t    var ten_sv = matchIDtagSpan(\"ctl00_ContentPlaceHolder1_ctl00_ucThongTinSV_lblTenSinhVien\",body);\r\n\t\t    var gioi_tinh = matchIDtagSpan(\"ctl00_ContentPlaceHolder1_ctl00_ucThongTinSV_lblPhai\",body);\r\n\t\t    var ngay_sinh = matchIDtagSpan(\"ctl00_ContentPlaceHolder1_ctl00_ucThongTinSV_lblNgaySinh\",body);\r\n\t\t    var noi_sinh = matchIDtagSpan(\"ctl00_ContentPlaceHolder1_ctl00_ucThongTinSV_lblNoiSinh\",body);\r\n\t\t    var lop = matchIDtagSpan(\"ctl00_ContentPlaceHolder1_ctl00_ucThongTinSV_lblLop\",body);\r\n\t\t    var nganh = matchIDtagSpan(\"ctl00_ContentPlaceHolder1_ctl00_ucThongTinSV_lbNganh\",body);\r\n\t\t    var khoa = matchIDtagSpan(\"ctl00_ContentPlaceHolder1_ctl00_ucThongTinSV_lblKhoa\",body);\r\n\t\t    var he_dao_tao = matchIDtagSpan(\"ctl00_ContentPlaceHolder1_ctl00_ucThongTinSV_lblHeDaoTao\",body);\r\n\t\t    var khoa_hoc = matchIDtagSpan(\"ctl00_ContentPlaceHolder1_ctl00_ucThongTinSV_lblKhoaHoc\",body);\r\n\r\n\t\t    return resolve({\r\n\t\t    \tid:mssv,\r\n\t\t    \tten_sv:ten_sv,\r\n\t\t    \tgioi_tinh:gioi_tinh,\r\n\t\t    \tngay_sinh:ngay_sinh,\r\n\t\t    \tnoi_sinh:noi_sinh,\r\n\t\t    \tlop:lop,\r\n\t\t    \tnganh:nganh,\r\n\t\t    \the_dao_tao:he_dao_tao,\r\n\t\t    \tkhoa_hoc:khoa_hoc,\r\n\t\t    \tkhoa:khoa\r\n\t\t    });\r\n\t\t})\r\n\t})\r\n}\r\n\r\nfunction matchIDtagSpan(id,body){\r\n\tvar regex = new RegExp(`<([^\\\\s]+).*?id=\"${id}\".*?>(.+?)</span>`);\r\n\tvar match=regex.exec(body);\r\n\tif(match){\r\n\t\treturn match[2];\r\n\t}else{\r\n\t\treturn null;\r\n\t}\r\n}"]}