{"version":3,"sources":["../../src/auth/m_passport.js"],"names":["LocalStrategy","LocalStrategyModul","Strategy","passport","use","username","password","done","fbid","token","then","result","Date","getTime","date","Promise","reject","model","user","findOne","where","mssv","id","update","fb_id","get","catch","ex","serializeUser","deserializeUser","plain"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,MAAMA,gBAAgBC,wBAAmBC,QAAzC;;AAEAC,mBAASC,GAAT,CAAa,IAAIJ,aAAJ,CACT,CAACK,QAAD,EAAUC,QAAV,EAAmBC,IAAnB,KAA4B;AACxB;AACA,QAAIC,OAAOH,QAAX;AACA,QAAII,QAAQH,QAAZ;;AAEA,uBAAOG,KAAP,EACCC,IADD,CACOC,MAAD,IAAU;AACZ,YAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuBF,OAAOG,IAA9B,GAAqC,KAAG,IAA3C,EAAgD;AAC5C,mBAAOC,QAAQC,MAAR,CAAe,eAAf,CAAP;AACH;AACD,eAAOC,gBAAMC,IAAN,CAAWC,OAAX,CAAmB;AACtBC,mBAAM;AACFC,sBAAKV,OAAOW;AADV;AADgB,SAAnB,CAAP;AAKH,KAVD,EAWCZ,IAXD,CAWOC,MAAD,IAAU;AACZ,YAAG,CAACA,MAAJ,EAAW;AACP,mBAAOI,QAAQC,MAAR,CAAe,wBAAf,CAAP;AACH,SAFD,MAEK;AACD,mBAAOL,OAAOY,MAAP,CAAc;AACjBC,uBAAMhB;AADW,aAAd,EAGNE,IAHM,CAGD,MAAI;AACN,uBAAOH,KAAK,IAAL,EAAU;AACbe,wBAAGX,OAAOc,GAAP,CAAW,MAAX;AADU,iBAAV,CAAP;AAGH,aAPM,CAAP;AAQH;AACJ,KAxBD,EAyBCC,KAzBD,CAyBQC,EAAD,IAAM;AACT,eAAOpB,KAAK,IAAL,EAAU,KAAV,CAAP;AACH,KA3BD;AA4BH,CAlCQ,CAAb;;AAqCAJ,mBAASyB,aAAT,CAAuB,CAACV,IAAD,EAAMX,IAAN,KAAa;AAChCA,SAAK,IAAL,EAAUW,KAAKI,EAAf;AACH,CAFD;;AAIAnB,mBAAS0B,eAAT,CAAyB,CAACX,IAAD,EAAMX,IAAN,KAAa;AAClCU,oBAAMC,IAAN,CAAWC,OAAX,CAAmB;AACfC,eAAM;AACFC,kBAAKH;AADH;AADS,KAAnB,EAIGR,IAJH,CAISC,MAAD,IAAU;AACd,YAAGA,MAAH,EAAU;AACNJ,iBAAK,IAAL,EAAUI,OAAOc,GAAP,CAAW,EAACK,OAAM,IAAP,EAAX,CAAV;AACH,SAFD,MAEK;AACDvB,iBAAK,IAAL,EAAU,KAAV;AACH;AACJ,KAVD;AAWH,CAZD;;kBAceJ,kB","file":"m_passport.js","sourcesContent":["import passport from 'passport';\r\nimport LocalStrategyModul from 'passport-local';\r\nimport model from '../model';\r\nimport {decode} from \"./m_jwt\";\r\n\r\nconst LocalStrategy = LocalStrategyModul.Strategy;\r\n\r\npassport.use(new LocalStrategy(\r\n    (username,password,done) => {\r\n        //check fbid\r\n        let fbid = username;\r\n        let token = password;\r\n\r\n        decode(token)\r\n        .then((result)=>{\r\n            if(new Date().getTime() - result.date > 30*1000){\r\n                return Promise.reject(\"Token hết hạn\");\r\n            }\r\n            return model.user.findOne({\r\n                where:{\r\n                    mssv:result.id\r\n                }\r\n            })\r\n        })\r\n        .then((result)=>{\r\n            if(!result){\r\n                return Promise.reject(\"Lỗi logic chương trình\");\r\n            }else{\r\n                return result.update({\r\n                    fb_id:fbid\r\n                })\r\n                .then(()=>{\r\n                    return done(null,{\r\n                        id:result.get(\"mssv\"),\r\n                    });\r\n                })\r\n            }\r\n        })\r\n        .catch((ex)=>{\r\n            return done(null,false);\r\n        })\r\n    }\r\n))\r\n\r\npassport.serializeUser((user,done)=>{\r\n    done(null,user.id);\r\n})\r\n\r\npassport.deserializeUser((user,done)=>{\r\n    model.user.findOne({\r\n        where:{\r\n            mssv:user\r\n        }\r\n    }).then((result)=>{\r\n        if(result){\r\n            done(null,result.get({plain:true}));\r\n        }else{\r\n            done(null,false);\r\n        }\r\n    })\r\n})\r\n\r\nexport default passport;"]}