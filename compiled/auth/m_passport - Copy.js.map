{"version":3,"sources":["../../src/auth/m_passport - Copy.js"],"names":["LocalStrategy","LocalStrategyModul","Strategy","passport","use","username","password","done","console","log","model","user","findOne","where","then","result","get","plain","catch","ex","serializeUser","deserializeUser"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AACA,IAAMA,gBAAgBC,wBAAmBC,QAAzC;;AAEAC,mBAASC,GAAT,CAAa,IAAIJ,aAAJ,CACT,UAACK,QAAD,EAAUC,QAAV,EAAmBC,IAAnB,EAA4B;AACxBC,YAAQC,GAAR,CAAY,UAAZ;AACAC,oBAAMC,IAAN,CAAWC,OAAX,CAAmB;AACjBC,eAAM;AACFR,sBAASA,QADP;AAEFC,sBAASA;AAFP;AADW,KAAnB,EAKGQ,IALH,CAKQ,UAACC,MAAD,EAAU;AACd,YAAG,CAACA,MAAJ,EAAW;AACP,mBAAOR,KAAK,IAAL,EAAU,KAAV,CAAP;AACH,SAFD,MAEK;AACD,mBAAOA,KAAK,IAAL,EAAUQ,OAAOC,GAAP,CAAW,EAACC,OAAM,IAAP,EAAX,CAAV,CAAP;AACH;AACJ,KAXD,EAWGC,KAXH,CAWS,UAACC,EAAD,EAAM;AACX,eAAOZ,KAAK,IAAL,EAAU,KAAV,CAAP;AACH,KAbD;AAcH,CAjBQ,CAAb;;AAoBAJ,mBAASiB,aAAT,CAAuB,UAACT,IAAD,EAAMJ,IAAN,EAAa;AAChCA,SAAK,IAAL,EAAUI,KAAKN,QAAf;AACH,CAFD;;AAIAF,mBAASkB,eAAT,CAAyB,UAAChB,QAAD,EAAUE,IAAV,EAAiB;AACtCG,oBAAMC,IAAN,CAAWC,OAAX,CAAmB;AACfC,eAAM;AACFR,sBAASA;AADP;AADS,KAAnB,EAIGS,IAJH,CAIQ,UAACC,MAAD,EAAU;AACd,YAAGA,MAAH,EAAU;AACNR,iBAAK,IAAL,EAAUQ,OAAOC,GAAP,CAAW,EAACC,OAAM,IAAP,EAAX,CAAV;AACH,SAFD,MAEK;AACDV,iBAAK,IAAL,EAAU,KAAV;AACH;AACJ,KAVD;AAWH,CAZD;;kBAceJ,kB","file":"m_passport - Copy.js","sourcesContent":["import passport from 'passport';\r\nimport LocalStrategyModul from 'passport-local';\r\nimport model from './model';\r\nconst LocalStrategy = LocalStrategyModul.Strategy;\r\n\r\npassport.use(new LocalStrategy(\r\n    (username,password,done) => {\r\n        console.log(\"Dang vao\");\r\n        model.user.findOne({\r\n          where:{\r\n              username:username,\r\n              password:password\r\n          }\r\n        }).then((result)=>{\r\n            if(!result){\r\n                return done(null,false);\r\n            }else{\r\n                return done(null,result.get({plain:true}));\r\n            }\r\n        }).catch((ex)=>{\r\n            return done(null,false);\r\n        })\r\n    }\r\n))\r\n\r\npassport.serializeUser((user,done)=>{\r\n    done(null,user.username);\r\n})\r\n\r\npassport.deserializeUser((username,done)=>{\r\n    model.user.findOne({\r\n        where:{\r\n            username:username\r\n        }\r\n    }).then((result)=>{\r\n        if(result){\r\n            done(null,result.get({plain:true}));\r\n        }else{\r\n            done(null,false);\r\n        }\r\n    })\r\n})\r\n\r\nexport default passport;"]}