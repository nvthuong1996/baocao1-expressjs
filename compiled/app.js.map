{"version":3,"sources":["../src/app.js"],"names":["test","session","secret","app","use","auth_passport","initialize","set","express","json","urlencoded","extended","static","indexRouter","loginRouter","crawlerRouter","signupRouter","accountRouter","conversionRouter","webhooksRouter","linkgrouplopRouter","req","res","next","err","locals","message","error","get","status","render"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAQA;;AAEA;;;;AAGA;;IAAYA,I;;;;;;AATZ,MAAMC,UAAU,8BAAgB;AAC9BC,UAAS;AADqB,CAAhB,CAAhB;;AAQA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA,IAAIC,MAAM,wBAAV;;AAGA;AACAA,IAAIC,GAAJ,CAAQH,OAAR,EACCG,GADD,CACKC,oBAAcC,UAAd,EADL,EAECF,GAFD,CAEKC,oBAAcJ,OAAd,EAFL;;AAKA;AACAE,IAAII,GAAJ,CAAQ,OAAR,EAAiB,SAAjB;;AAEAJ,IAAII,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAJ,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAD,IAAIC,GAAJ,CAAQI,kBAAQC,IAAR,EAAR;AACAN,IAAIC,GAAJ,CAAQI,kBAAQE,UAAR,CAAmB,EAAEC,UAAU,KAAZ,EAAnB,CAAR;AACAR,IAAIC,GAAJ,CAAQ,6BAAR;AACAD,IAAIC,GAAJ,CAAQI,kBAAQI,MAAR,CAAe,UAAf,CAAR;;AAGAT,IAAIC,GAAJ,CAAQ,GAAR,EAAaS,eAAb;AACAV,IAAIC,GAAJ,CAAQ,QAAR,EAAkBU,eAAlB;AACAX,IAAIC,GAAJ,CAAQ,WAAR,EAAqBW,oBAArB;AACAZ,IAAIC,GAAJ,CAAQ,aAAR,EAAuBY,mBAAvB;AACAb,IAAIC,GAAJ,CAAQ,cAAR,EAAwBa,oBAAxB;AACAd,IAAIC,GAAJ,CAAQ,aAAR,EAAuBc,oBAAvB;AACAf,IAAIC,GAAJ,CAAQ,UAAR,EAAoBe,kBAApB;AACAhB,IAAIC,GAAJ,CAAQ,WAAR,EAAqBgB,kBAArB;;AAIA;AACAjB,IAAIC,GAAJ,CAAQ,UAASiB,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,OAAK,0BAAY,GAAZ,CAAL;AACD,CAFD;;AAIA;AACApB,IAAIC,GAAJ,CAAQ,UAASoB,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,MAAIG,MAAJ,CAAWC,OAAX,GAAqBF,IAAIE,OAAzB;AACAJ,MAAIG,MAAJ,CAAWE,KAAX,GAAmBN,IAAIlB,GAAJ,CAAQyB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAIO,MAAJ,CAAWL,IAAIK,MAAJ,IAAc,GAAzB;AACAP,MAAIQ,MAAJ,CAAW,OAAX;AACD,CARD;;QAUQ3B,G,GAAAA,G;QAAIF,O,GAAAA,O","file":"app.js","sourcesContent":["import createError from 'http-errors';\nimport express from 'express';\nimport path from 'path';\nimport cookieParser from 'cookie-parser';\nimport logger from 'morgan';\nimport global from './global';\n\nimport express_session from 'express-session';\nimport indexRouter from './routes/index';\nimport loginRouter from './routes/login';\nimport crawlerRouter from './routes/crawlerAPI';\nimport signupRouter from './routes/signupAPI';\nimport accountRouter from './routes/accountAPI';\nimport conversionRouter from './routes/conversion';\nimport webhooksRouter from './routes/webhooks';\nimport linkgrouplopRouter from './routes/grouplop';\n\n\n\nconst session = express_session({\n  secret : \"secret\",\n});\n\nimport {auth_passport} from './auth';\n\nimport model from \"./model\";\n\n//test\nimport * as test from \"./test\";\n//test.setMenu();\n\n\n// import thread_setting from './messenger-api-helpers/thread-setup';\n\n// thread_setting.setDomainWhitelisting();\n// thread_setting.setGetStarted();\n// thread_setting.setPersistentMenu();\n\n\n//model.sequelize.sync({force: true}).then(() => {\n//   // Table created\n  \n//});\n\n//import {createConversionFromMonHoc} from \"./tool/updateMonHocvaTKB\";\n\n\n//createConversionFromMonHoc();\n\nvar app = express();\n\n\n//Authenticate\napp.use(session)\n.use(auth_passport.initialize())\n.use(auth_passport.session());\n\n\n// view engine setup\napp.set('views', './views');\n\napp.set('view engine', 'ejs');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static('./public'));\n\n\napp.use('/', indexRouter);\napp.use('/login', loginRouter);\napp.use('/api/qldt', crawlerRouter);\napp.use('/api/signup', signupRouter);\napp.use('/api/account', accountRouter);\napp.use('/conversion', conversionRouter);\napp.use('/webhook', webhooksRouter);\napp.use('/grouplop', linkgrouplopRouter);\n\n\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nexport {app,session};\n"]}