{"version":3,"sources":["../../src/routes/signup.js"],"names":["router","express","Router","get","req","res","next","query","nickname","fbid","token","test","status","json","err","auth_jwt","decode","then","decoded","id","ten_sv","date","Date","getTime","console","log","model","user","findOne","where","mssv","result","Promise","reject","nick_name","create","is_active","token_login","encode","send","catch","ex","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAIA,SAASC,kBAAQC,MAAR,EAAb;;AAEA;;;AAGAF,OAAOG,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAAA,kBACZF,IAAIG,KADQ;AAAA,KACnCC,QADmC,cACnCA,QADmC;AAAA,KAC1BC,IAD0B,cAC1BA,IAD0B;AAAA,KACrBC,KADqB,cACrBA,KADqB;;;AAGxC,KAAG,CAAC,uCAAuCC,IAAvC,CAA4CH,QAA5C,CAAJ,EAA0D;AACzD,SAAOH,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,QAAI;AADuB,GAArB,CAAP;AAGA;;AAEDC,gBAASC,MAAT,CAAgBN,KAAhB,EACCO,IADD,CACM,UAACC,OAAD,EAAW;AAAA,MACXC,EADW,GACOD,OADP,CACXC,EADW;AAAA,MACRC,MADQ,GACOF,OADP,CACRE,MADQ;AAAA,MACDC,IADC,GACOH,OADP,CACDG,IADC;;;AAGhB,MAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuBF,IAAvB,GAA8B,KAAG,EAAH,GAAM,IAAvC,EAA4C;AAC3C,UAAOhB,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,SAAI;AADuB,IAArB,CAAP;AAGA;AACD;AACAU,UAAQC,GAAR,CAAY,GAAZ;AACA,SAAOC,gBAAMC,IAAN,CAAWC,OAAX,CAAmB;AACzBC,UAAM;AACLC,UAAKX;AADA;AADmB,GAAnB,EAKNF,IALM,CAKD,UAACc,MAAD,EAAU;AACf,OAAGA,MAAH,EAAU;AACT,WAAOC,QAAQC,MAAR,CAAe,uBAAf,CAAP;AACA,IAFD,MAEK;AACJ,WAAOP,gBAAMC,IAAN,CAAWC,OAAX,CAAmB;AACzBC,YAAM;AACLK,iBAAU1B;AADL;AADmB,KAAnB,EAKNS,IALM,CAKD,UAACc,MAAD,EAAU;AACf,SAAGA,MAAH,EAAU;AACT,aAAOC,QAAQC,MAAR,CAAe,4BAAf,CAAP;AACA,MAFD,MAEK;AACJ,aAAOP,gBAAMC,IAAN,CAAWQ,MAAX,CAAkB;AACxBL,aAAKX,EADmB;AAExBiB,kBAAU,GAFc;AAGxBF,kBAAU1B;AAHc,OAAlB,EAIJS,IAJI,CAIC,YAAI;AACX,WAAIoB,cAActB,eAASuB,MAAT,CAAgB;AACjCnB,YAAIA,EAD6B;AAEjCC,gBAAOA,MAF0B;AAGjCC,cAAK,IAAIC,IAAJ,GAAWC,OAAX;AAH4B,QAAhB,CAAlB;AAKA,cAAOlB,IAAIO,MAAJ,CAAW,GAAX,EAAgB2B,IAAhB,CAAqB;AAC3BzB,aAAI,IADuB;AAE3BJ,eAAM2B;AAFqB,QAArB,CAAP;AAIA,OAdM,CAAP;AAeA;AACD,KAzBM,CAAP;AA0BA;AACD,GApCM,CAAP;AAqCA,EAhDD,EAiDCG,KAjDD,CAiDO,UAACC,EAAD,EAAM;AACZ,SAAOpC,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BC,QAAI2B,KAAG;AADoB,GAArB,CAAP;AAGA,EArDD;AAsDA,CA/DD;;AAiEAC,OAAOC,OAAP,GAAiB3C,MAAjB","file":"signup.js","sourcesContent":["import express from \"express\";\r\nimport model from \"../model\";\r\nimport {auth_jwt} from \"../auth\";\r\n\r\nvar router = express.Router();\r\n\r\n/*\r\n\tBước 1:\r\n*/\r\nrouter.get('/', function(req, res, next) {\r\n\tlet {nickname,fbid,token} = req.query;\r\n\t\r\n\tif(!/[a-zA-Z]{4,}[^#&<>\\\"~;$^%{}?]{1,20}$/.test(nickname)){\r\n\t\treturn res.status(200).json({\r\n\t\t\terr:\"Nick name không hợp lệ. Nick name nên có từ 4 kí tự và bắt đầu bằng chữ\",\r\n\t\t})\r\n\t}\r\n\r\n\tauth_jwt.decode(token)\r\n\t.then((decoded)=>{\r\n\t\tlet {id,ten_sv,date} = decoded;\r\n\t\t\r\n\t\tif(new Date().getTime() - date > 15*60*1000){\r\n\t\t\treturn res.status(200).json({\r\n\t\t\t\terr:\"Token đã hết hạn. Vui lòng login lại\",\r\n\t\t\t});\r\n\t\t}\r\n\t\t// Check nickname,fb_id\r\n\t\tconsole.log(\"1\");\r\n\t\treturn model.user.findOne({\r\n\t\t\twhere:{\r\n\t\t\t\tmssv:id\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then((result)=>{\r\n\t\t\tif(result){\r\n\t\t\t\treturn Promise.reject(\"Tài khoản đã được tạo\");\r\n\t\t\t}else{\r\n\t\t\t\treturn model.user.findOne({\r\n\t\t\t\t\twhere:{\r\n\t\t\t\t\t\tnick_name:nickname\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then((result)=>{\r\n\t\t\t\t\tif(result){\r\n\t\t\t\t\t\treturn Promise.reject(\"Nick name của bạn bị trùng\");\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\treturn model.user.create({\r\n\t\t\t\t\t\t\tmssv:id,\r\n\t\t\t\t\t\t\tis_active:'A',\r\n\t\t\t\t\t\t\tnick_name:nickname,\r\n\t\t\t\t\t\t}).then(()=>{\r\n\t\t\t\t\t\t\tvar token_login = auth_jwt.encode({\r\n\t\t\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\t\t\tten_sv:ten_sv,\r\n\t\t\t\t\t\t\t\tdate:new Date().getTime() \r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn res.status(200).send({\r\n\t\t\t\t\t\t\t\terr:null,\r\n\t\t\t\t\t\t\t\ttoken:token_login\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\t.catch((ex)=>{\r\n\t\treturn res.status(200).json({\r\n\t\t\terr:ex+\"\",\r\n\t\t})\r\n\t})\r\n});\r\n\r\nmodule.exports = router;\r\n"]}