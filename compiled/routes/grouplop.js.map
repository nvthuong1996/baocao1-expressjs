{"version":3,"sources":["../../src/routes/grouplop.js"],"names":["router","express","Router","use","req","res","next","isUnauthenticated","redirect","post","id","params","user","mssv","user_conversion","model","findOne","where","conversion_id","user_id","user_info","qldt_account","conversion","data","link","body","name","ten_sv","update","link_group_lop","JSON","stringify","get","groupInfo","parse","check","render","module","exports"],"mappings":";;AAAA;;;;AAEA;;;;;;AAGA,MAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;AAGAF,OAAOG,GAAP,CAAW,CAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,KAAgB;AAC1B,QAAGF,IAAIG,iBAAJ,EAAH,EAA2B;AAC1B,eAAOF,IAAIG,QAAJ,CAAa,QAAb,CAAP;AACA;AACD,WAAOF,MAAP;AACA,CALD;;AAQAN,OAAOS,IAAP,CAAY,MAAZ,EAAmB,OAAOL,GAAP,EAAWC,GAAX,EAAeC,IAAf,KAAsB;AACrC,UAAMI,KAAKN,IAAIO,MAAJ,CAAWD,EAAtB;AACA,UAAME,OAAOR,IAAIQ,IAAJ,CAASC,IAAtB;AACA,QAAIC,kBAAkB,MAAMC,gBAAMD,eAAN,CAAsBE,OAAtB,CAA8B;AACtDC,eAAM;AACFC,2BAAcR,EADZ;AAEFS,qBAAQP;AAFN;AADgD,KAA9B,CAA5B;;AAOA,QAAG,CAACE,eAAJ,EAAoB;AAChB,eAAOT,IAAIG,QAAJ,CAAa,eAAaE,EAA1B,CAAP;AACH;;AAGD,QAAIU,YAAY,MAAML,gBAAMM,YAAN,CAAmBL,OAAnB,CAA2B;AAC7CC,eAAM;AACFP,gBAAGE;AADD;AADuC,KAA3B,CAAtB;;AAMA,QAAIU,aAAa,MAAMP,gBAAMO,UAAN,CAAiBN,OAAjB,CAAyB;AAC5CC,eAAM;AACFP,gBAAGA;AADD;AADsC,KAAzB,CAAvB;;AAMA,QAAIa,OAAO;AACPC,cAAKpB,IAAIqB,IAAJ,CAASD,IADP;AAEPE,cAAKN,UAAUO,MAFR;AAGPd,cAAKO,UAAUV;AAHR,KAAX;;AAMA,UAAMY,WAAWM,MAAX,CAAkB;AACpBC,wBAAeC,KAAKC,SAAL,CAAeR,IAAf;AADK,KAAlB,CAAN;;AAIA,WAAOlB,IAAIG,QAAJ,CAAa,eAAaE,EAA1B,CAAP;AAGH,CAxCD;;AA0CAV,OAAOgC,GAAP,CAAW,MAAX,EAAkB,OAAO5B,GAAP,EAAWC,GAAX,EAAeC,IAAf,KAAsB;AACpC,QAAII,KAAKN,IAAIO,MAAJ,CAAWD,EAApB;AACA,QAAIY,aAAa,MAAMP,gBAAMO,UAAN,CAAiBN,OAAjB,CAAyB;AAC5CC,eAAM;AACFP,gBAAGA;AADD;AADsC,KAAzB,CAAvB;AAKA,QAAIuB,YAAY,EAAhB;AACA,QAAGX,UAAH,EAAc;AACVW,oBAAYH,KAAKI,KAAL,CAAWZ,WAAWO,cAAtB,CAAZ;AACA,YAAGI,SAAH,EAAa;AACTA,sBAAU,OAAV,IAAqB,IAArB;AACH,SAFD,MAEK;AACDA,wBAAY;AACRE,uBAAM;AADE,aAAZ;AAGH;AACJ,KATD,MASK;AACDF,kBAAU,OAAV,IAAqB,KAArB;AACH;;AAED,WAAO5B,IAAI+B,MAAJ,CAAW,UAAX,EAAsB;AACzBH,mBAAUA,SADe;AAEzBvB,YAAGA;AAFsB,KAAtB,CAAP;AAIH,CAzBD;;AA2BA2B,OAAOC,OAAP,GAAiBtC,MAAjB","file":"grouplop.js","sourcesContent":["import express from \"express\";\r\n\r\nimport model from \"../model\";\r\n\r\n\r\nconst router = express.Router();\r\n\r\n/* GET home page. */\r\n\r\n\r\nrouter.use((req,res,next)=>{\r\n\tif(req.isUnauthenticated()){\r\n\t\treturn res.redirect('/login');\r\n\t}\r\n\treturn next();\r\n})\r\n\r\n\r\nrouter.post(\"/:id\",async (req,res,next)=>{\r\n    const id = req.params.id;\r\n    const user = req.user.mssv;\r\n    let user_conversion = await model.user_conversion.findOne({\r\n        where:{\r\n            conversion_id:id,\r\n            user_id:user\r\n        }\r\n    });\r\n\r\n    if(!user_conversion){\r\n        return res.redirect('/grouplop/'+id);\r\n    }\r\n\r\n\r\n    let user_info = await model.qldt_account.findOne({\r\n        where:{\r\n            id:user\r\n        }\r\n    })\r\n\r\n    let conversion = await model.conversion.findOne({\r\n        where:{\r\n            id:id\r\n        }\r\n    });\r\n\r\n    var data = {\r\n        link:req.body.link,\r\n        name:user_info.ten_sv,\r\n        mssv:user_info.id\r\n    }\r\n\r\n    await conversion.update({\r\n        link_group_lop:JSON.stringify(data)\r\n    })\r\n\r\n    return res.redirect('/grouplop/'+id);\r\n\r\n\r\n})\r\n\r\nrouter.get(\"/:id\",async (req,res,next)=>{\r\n    let id = req.params.id;\r\n    let conversion = await model.conversion.findOne({\r\n        where:{\r\n            id:id\r\n        }\r\n    });\r\n    let groupInfo = {};\r\n    if(conversion){\r\n        groupInfo = JSON.parse(conversion.link_group_lop);\r\n        if(groupInfo){\r\n            groupInfo[\"check\"] = true;\r\n        }else{\r\n            groupInfo = {\r\n                check:false,\r\n            }\r\n        }\r\n    }else{\r\n        groupInfo[\"check\"] = false;\r\n    }\r\n    \r\n    return res.render(\"grouplop\",{\r\n        groupInfo:groupInfo,\r\n        id:id\r\n    });\r\n})\r\n\r\nmodule.exports = router;"]}