{"version":3,"sources":["../../src/routes/crawler.js"],"names":["crawler","cert","fs","readFileSync","router","express","Router","get","req","res","next","userName","query","username","passWord","password","json","crawlerBasicInfo","then","data","ngay_sinh","split","reverse","join","resData","JSON","parse","stringify","token","jwt","sign","id","ten_sv","date","Date","getTime","algorithm","model","user","findOne","where","mssv","result","qldt_account","update","create","catch","ex","status","module","exports"],"mappings":";;AAAA;;;;AACA;;IAAYA,O;;AACZ;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAIC,OAAOC,aAAGC,YAAH,CAAgB,YAAhB,CAAX;;AAEA,IAAIC,SAASC,kBAAQC,MAAR,EAAb;;AAIA;;;;;;;;;AAUAF,OAAOG,GAAP,CAAW,OAAX,EAAoB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5C,KAAIC,WAAWH,IAAII,KAAJ,CAAUC,QAAzB;AACA,KAAIC,WAAWN,IAAII,KAAJ,CAAUG,QAAzB;AACA,KAAGJ,YAAU,EAAb,EAAgB;AACfF,MAAIO,IAAJ,CAAS;AACR,UAAM;AADE,GAAT;AAGA;AACDhB,SAAQiB,gBAAR,CAAyBN,QAAzB,EAAkCG,QAAlC,EACCI,IADD,CACM,UAACC,IAAD,EAAQ;;AAEbA,OAAKC,SAAL,GAAiBD,KAAKC,SAAL,CAAeC,KAAf,CAAqB,GAArB,EAA0BC,OAA1B,GAAoCC,IAApC,CAAyC,GAAzC,CAAjB;AACA,MAAIC,UAAUC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeR,IAAf,CAAX,CAAd;;AAEA;AACA;;AAEAK,UAAQ,KAAR,IAAiB,IAAjB;;AAGA;AACA,MAAII,QAAQC,uBAAIC,IAAJ,CAAS,EAAEC,IAAIP,QAAQO,EAAd,EAAiBC,QAAOR,QAAQQ,MAAhC,EAAuCC,MAAK,IAAIC,IAAJ,GAAWC,OAAX,EAA5C,EAAT,EAA6ElC,IAA7E,EAAmF,EAAEmC,WAAW,OAAb,EAAnF,CAAZ;AACAZ,UAAQ,OAAR,IAAmBI,KAAnB;;AAGA;;;;;AAKAS,kBAAMC,IAAN,CAAWC,OAAX,CAAmB;AAClBC,UAAO;AACNC,UAAMtB,KAAKY;AADL;AADW,GAAnB,EAIGb,IAJH,CAIQ,UAACwB,MAAD,EAAU;AACjB,OAAGA,MAAH,EAAU;AACTlB,YAAQ,OAAR,IAAkB,IAAlB;AACA,IAFD,MAEK;AACJA,YAAQ,OAAR,IAAkB,KAAlB;AACA;;AAEDa,mBAAMM,YAAN,CAAmBJ,OAAnB,CAA2B;AAC1BC,WAAO;AACNT,SAAIZ,KAAKY;AADH;AADmB,IAA3B,EAKCb,IALD,CAKM,UAACwB,MAAD,EAAU;AACf,QAAGA,MAAH,EAAU;AACT,YAAOA,OAAOE,MAAP,CAAczB,IAAd,CAAP;AACA,KAFD,MAEK;AACJ,YAAOkB,gBAAMM,YAAN,CAAmBE,MAAnB,CAA0B1B,IAA1B,CAAP;AACA;AACD,IAXD,EAYC2B,KAZD,CAYO,UAACC,EAAD,EAAM;AACZvB,YAAQ,KAAR,IAAiBuB,KAAG,EAApB;AACAtC,QAAIuC,MAAJ,CAAW,GAAX,EAAgBhC,IAAhB,CAAqBQ,OAArB;AACA,IAfD;AAgBAf,OAAIuC,MAAJ,CAAW,GAAX,EAAgBhC,IAAhB,CAAqBQ,OAArB;AACA,GA5BD;AA6BA,EAnDD,EAoDCsB,KApDD,CAoDO,UAACC,EAAD,EAAM;AACZtC,MAAIO,IAAJ,CAAS;AACR,UAAM+B,KAAG;AADD,GAAT;AAGA,EAxDD;AAyDA,CAjED;;AAmEAE,OAAOC,OAAP,GAAiB9C,MAAjB","file":"crawler.js","sourcesContent":["import express from \"express\";\r\nimport * as crawler from \"../qldt\";\r\nimport model from \"../model\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport fs from \"fs\";\r\n\r\nvar cert = fs.readFileSync(\"./cert.key\");\r\n\r\nvar router = express.Router();\r\n\r\n\r\n\r\n/*\r\n\tCác bước lấy info người sử\r\n\tB1: Sử dụng mật khẩu get thông tin người dùng\r\n\tB2: Kiểm xem người dùng này đã từng đăng kí hay chưa\r\n\tB3: Update dữ liệu người dùng\r\n\r\n\r\n*/\r\n\r\n\r\nrouter.get('/info', function(req, res, next) {\r\n\tlet userName = req.query.username;\r\n\tlet passWord = req.query.password;\r\n\tif(userName==\"\"){\r\n\t\tres.json({\r\n\t\t\t\"err\":\"Không được bỏ trống mục tài khoản\",\r\n\t\t});\r\n\t}\r\n\tcrawler.crawlerBasicInfo(userName,passWord)\r\n\t.then((data)=>{\r\n\r\n\t\tdata.ngay_sinh = data.ngay_sinh.split('/').reverse().join(\"-\");\r\n\t\tvar resData = JSON.parse(JSON.stringify(data));\r\n\r\n\t\t//test\r\n\t\t//data.khoa = \"abc\";\r\n\r\n\t\tresData[\"err\"] = null;\r\n\r\n\r\n\t\t//Sinh token\r\n\t\tvar token = jwt.sign({ id: resData.id,ten_sv:resData.ten_sv,date:new Date().getTime() }, cert, { algorithm: 'RS256'});\r\n\t\tresData[\"token\"] = token;\r\n\r\n\r\n\t\t/*\r\n\t\t* Phải tìm xem bảng user có thông tin người dùng này chưa\r\n\t\t* Nếu có thì cho vào trong luôn\r\n\t\t* Nếu chưa có thì show đăng kí\r\n\t\t*/\r\n\t\tmodel.user.findOne({\r\n\t\t\twhere: {\r\n\t\t\t\tmssv: data.id\r\n\t\t\t} \r\n\t\t}).then((result)=>{\r\n\t\t\tif(result){\r\n\t\t\t\tresData[\"is_dk\"] =true;\r\n\t\t\t}else{\r\n\t\t\t\tresData[\"is_dk\"] =false;\r\n\t\t\t}\r\n\r\n\t\t\tmodel.qldt_account.findOne({\r\n\t\t\t\twhere: {\r\n\t\t\t\t\tid: data.id\r\n\t\t\t\t} \r\n\t\t\t})\r\n\t\t\t.then((result)=>{\r\n\t\t\t\tif(result){\r\n\t\t\t\t\treturn result.update(data);\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn model.qldt_account.create(data);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((ex)=>{\r\n\t\t\t\tresData[\"err\"] = ex+\"\";\r\n\t\t\t\tres.status(200).json(resData);\r\n\t\t\t});\r\n\t\t\tres.status(200).json(resData);\r\n\t\t})\r\n\t})\r\n\t.catch((ex)=>{\r\n\t\tres.json({\r\n\t\t\t\"err\":ex+\"\",\r\n\t\t});\r\n\t})\r\n});\r\n\r\nmodule.exports = router;\r\n"]}